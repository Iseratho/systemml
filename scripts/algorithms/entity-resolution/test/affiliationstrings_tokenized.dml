#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# assumes that the file is in the format entity_id,word,count

source("./scripts/algorithms/entity-resolution/primitives/matching.dml") as match

FX = read("./data/affiliationstrings/affiliationstrings_tokens.csv");
FY = read("./data/affiliationstrings/affiliationstrings_mapping.csv");

jspec = "{recode:[C2]}"
[X0, MX] = transformencode(target=FX, spec=jspec);
X = table(X0[,1], X0[,2], X0[,3])

# print(toString(X, rows=10))

SIM = match::cosine(X);
THRES = match::tresholding(SIM, 0.9);

write(THRES, "/home/iseratho/systemml/data/affiliationstrings/affiliationstrings_res.csv", sparse=TRUE);
